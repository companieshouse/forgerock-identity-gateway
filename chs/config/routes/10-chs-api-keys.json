{
  "name": "CHS API Keys",
  "baseURI": "https://&{api.load.balancer}",
  "globalDecorators": {
    "capture": "all"
  },
  "heap": [
    {
      "name": "ReverseProxyHandler",
      "type": "ReverseProxyHandler",
      "capture": [
        "request",
        "response"
      ],
      "config": {
        "tls": {
          "type": "ClientTlsOptions",
          "config": {
            "trustManager": {
              "type": "TrustAllManager"
            }
          }
        },
        "hostnameVerifier": "ALLOW_ALL"
      }
    },
    {
      "name": "SystemAndEnvSecretStore-FIDC",
      "type": "SystemAndEnvSecretStore"
    },
    {
      "name": "AmService-FIDC",
      "type": "AmService",
      "config": {
        "url": "https://&{fidc.fqdn}/am",
        "realm": "/&{fidc.realm}",
        "version": "7.1",
        "agent": {
          "username": "ig_agent",
          "passwordSecretId": "agent.secret.id"
        },
        "secretsProvider": "SystemAndEnvSecretStore-FIDC"
      }
    },
    {
      "name": "SecretKeyPropertyFormat-SigningKey",
      "type": "SecretKeyPropertyFormat",
      "config": {
        "format": "BASE64",
        "algorithm": "AES"
      }
    },
    {
      "name": "SystemAndEnvSecretStore-SigningKey",
      "type": "SystemAndEnvSecretStore",
      "config": {
        "mappings": [{
          "secretId": "signing.key.secret.id",
          "format": "SecretKeyPropertyFormat-SigningKey"
        }]
      }
    }
  ],
  "handler": {
    "name": "OIDC Handler",
    "type": "Chain",
    "config": {
      "filters": [
        {
          "type": "ForwardedRequestFilter",
          "config": {
            "scheme": "${request.headers['X-Forwarded-Proto'][0]}",
            "host": "${split(request.headers['Host'][0], ':')[0]}",
            "port": "${integer(request.headers['X-Forwarded-Port'][0])}"
          }
        },
        {
          "name": "OAuth2ResourceServerFilter-FIDC",
          "type": "OAuth2ResourceServerFilter",
          "config": {
            "scopes": [],
            "requireHttps": false,
            "realm": "OpenIG",
            "accessTokenResolver": {
              "name": "TokenIntrospectionAccessTokenResolver-FIDC",
              "type": "TokenIntrospectionAccessTokenResolver",
              "config": {
                "amService": "AmService-FIDC",
                "providerHandler": {
                  "type": "Chain",
                  "config": {
                    "filters": [
                      {
                        "type": "HttpBasicAuthenticationClientFilter",
                        "config": {
                          "username": "ig_agent",
                          "passwordSecretId": "agent.secret.id",
                          "secretsProvider": "SystemAndEnvSecretStore-FIDC"
                        }
                      }
                    ],
                    "handler": "ForgeRockClientHandler"
                  }
                }
              }
            }
          }
        },
        {
          "name": "AddERICPassthroughAttributes",
          "type": "ScriptableFilter",
          "config": {
            "type": "application/x-groovy",
            "file": "addERICPassthroughAttributes.groovy"
          }
        },
        {
          "name": "JwtBuilderFilter-ERIC",
          "type": "JwtBuilderFilter",
          "config": {
              "template": {
                "claims": "{${attributes.ericSubject},${attributes.ericIssuer},${attributes.ericExpiry}}"
              },
              "secretsProvider": "SecretKeyPropertyFormat-SigningKey",
              "encryption": {
                "secretId": "signing.key.secret.id",
                "algorithm": "dir",
                "method": "A128CBC-HS256"
              }
          }
        },
        {
          "name": "HeaderFilter-ERIC",
          "type": "HeaderFilter",
          "config": {
            "messageType": "REQUEST",
            "add": {
              "Authorization": "Bearer eric.${contexts.jwtBuilder.value}",
              "ERIC-Authorised-User": "test@test.com",
              "ERIC-Authorised-Scope": "${contexts.oauth2.accessToken.scopes}",
              "ERIC-Authorised-Token-Permissions": "${contexts.oauth2.accessToken.info.token_permissions}",
              "ERIC-Authorised-Roles": "/admin/transaction-lookup",
              "ERIC-Application-ID": "${contexts.oauth2.accessToken.info.client-id}"
            }
          }
        }
      ],
      "handler": "ReverseProxyHandler"
    }
  }
}